MySQL Scheme for Tstat Log Analysis
-----------------------------------

The files in this directory can be used to load part of the information in 
the log_XXX files in a MySQL database, for further analysis.

The database is very simple, actually just simple tables with indexes,
useful for quick direct searches. Complex queries may require external
scripts, since JOINs over large tables might not be possible.

The included database scheme uses only few columns from the log_tcp_complete
and log_tcp_nocomplete files. Indeed, the scheme and the Perl scripts can 
easily be  adapted to include any kind of information extracted from the
log files, depending on the user needs. 

The scripts are provided "as is" with no guarantees.

Files:
 check_internal.pl	-- Function used to check if an IP address is internal
 db_tstat.sql		-- MySQL scheme
 load_db_tcp_no.pl	-- Script to load log_tcp_nocomplete information
 load_db_tcp.pl		-- Script to load log_tcp_complete information
 load_db_udp.pl		-- Script to load log_udp_information

Instructions
------------

You need a MySQL installation, Perl, common Perl modules DBI and DBD:mysql, and
Net::CIDR (that you can install from CPAN).

1. Create a database using
   $ mysqladmin create databasename 
  
1b. (Optional) Grant suitable rights to a user to access the database, if
   you do not want to manage everything as administrator. 

2. Create the tables
   $ mysql databasename < db_tstat.sql
   
3. Modify the load_db_xx.pl scripts, inserting the correct database name, 
   username and password to access the database
   
4. Modify check_internal.pl, inserting the list of internal networks (the
   same it is used by tstat with the -N option).
   
5. Load the data.
   The scripts expect the corresponding logfile on STDIN or as an argument
   on the command line. Example
   
   $ perl load_db_tcp.pl log_tcp_complete
   
   You can indicate several files on the command line, that will be read in
   order
   
   $ perl load_db_udp.pl log_udp_complete.1 log_udp_complete.2 
   
Usage
-----

IP addresses src_ip and dst_ip are stored as integers. You need INET_ATON() and
INET_NTOA() to convert them to/form the dotted-decimal format.

To list all the destination IPs of TCP connections from 192.168.5.10:
 
 SELECT distinct INET_NTOA(dst_ip) FROM tcp 
                 WHERE src_ip=INET_ATON('192.168.5.10');

Ranges of addresses may be compared using the integer form. Find all the connections 
by hosts in the 192.168.16.0/24 network

 SELECT * FROM tcp WHERE src_ip>INET_ATON('192.168.16.0') 
                     AND src_ip<INET_ATON('192.168.16.255');
 
